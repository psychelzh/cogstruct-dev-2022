---
title: Explore Cognitive Structure
author: Liang Zhang
date: 2022-08-21
format: 
  html: 
    code-fold: true
    toc: true
    toc-location: left
category: structure
execute: 
  warning: false
  showtext: true
bibliography: references.bib
---

```{r}
#| label: setup

library(tidyverse)
library(corrr)
library(showtext)
library(gt)
library(formattable)
library(patchwork)
library(psych)
requireNamespace("bit64")
# custom scripts
purrr::walk(fs::dir_ls("R"), source)
```

```{r}
#| label: utils

summary_data <- function(data, name_value = "test") {
  pivot_wider_indices(data, name_value, always_suffix = TRUE) |> 
    select(-user_id) |> 
    psych::describe() |> 
    as_tibble(rownames = "game_index_name") |> 
    select(game_index_name, n, mean, sd, min, max, skew, kurtosis) |> 
    separate(game_index_name, c("game_name", "index_name"), sep = "\\.") |> 
    mutate(
      skew_status = case_when(
        abs(skew) > 1 ~ "highly",
        abs(skew) > 0.5 ~ "moderately",
        TRUE ~ "acceptable"
      )
    )
}

show_normality <- function(data, game_name, index_name, skew, ..., 
                           name_value = "test") {
  p_hist <- ggplot(data, aes_string(name_value)) + 
    geom_histogram(bins = 30) +
    labs(x = "Raw Score", y = "Count") +
    theme_bw()
  p_qq <- ggplot(data, aes_string(sample = name_value)) + 
    geom_qq() +
    geom_qq_line() +
    labs(x = "Expected Quantile", y = "Observed Quantile") +
    theme_bw()
  wrap_elements(grid::textGrob(
    str_glue("{game_name}\n{index_name}\nskewness = {round(skew, 2)}"),
    rot = 90
  )) + p_hist + p_qq +
    plot_layout(widths = c(0.1, 0.45, 0.45))
}
```

```{r}
#| label: load-data

targets::tar_load(users)
targets::tar_load(indices_selection)
targets::tar_load(indices_struct)
dim_order <- c(
  "attention", "multitask", "switching", "inhibition",
  "reasoning", "complex span", "working memory", "short term memory",
  "long term memory", "probability learning",
  "speeded IP", "strategic IP",
  "perception", "math", "language"
)
indices <- indices_struct |> 
  arrange(factor(dimension, dim_order)) |>
  group_by(game_name, index_name) |>
  # remove 1d outliers based on "iqr"
  filter(!test %in% boxplot.stats(test)$out) |>
  ungroup()
indices_stats <- summary_data(indices)
```

# Data Checking on Normality

It is necessary to check normality before performing exploratory analysis.

## Original Form

```{r}
#| label: fig-histograms
#| column: page
#| fig-cap: Histogram of All Game Indices
#| fig-width: 10
#| fig-height: 18

indices |> 
  mutate(facet_title = str_c(game_name, index_name, sep = "\n")) |> 
  ggplot(aes(test)) + 
  geom_histogram(bins = 30) +
  facet_wrap(~facet_title, scales = "free", ncol = 5) +
  labs(x = "Raw Score", y = "Count") +
  theme_bw()
```

```{r}
#| label: fig-qqplot
#| column: page
#| fig-cap: QQ-plot of All Game Indices
#| fig-width: 10
#| fig-height: 18

indices |> 
  mutate(facet_title = str_c(game_name, index_name, sep = "\n")) |> 
  ggplot(aes(sample = test)) + 
  geom_qq() +
  geom_qq_line() +
  facet_wrap(~facet_title, scales = "free", ncol = 5) +
  labs(x = "Expected Quantile", y = "Observed Quantile") +
  theme_bw()
```

According to a classic book [@kline2016], critical value for absolute skewness is 3, and critical value for absolute kurtosis is 10; thus, these indices are all not too apart from normal distribution. But see @fig-histograms, we detect some heavily skewed indices. Just as a classic book [@bulmer1979] said, critical value for skewness is 0.5 (moderately skew) and 1 (highly skew).

```{r}
#| label: data-description
#| column: page

indices_stats |> 
  mutate(across(mean:kurtosis, ~ digits(., 3))) |> 
  formattable() |> 
  as.datatable(
    caption = "Descriptive Statistics of All Indices"
  )
```

## Transformed

Here we decide to convert the moderately and highly indices based on the conversion suggested by Howell [-@howell2013].

```{r}
#| label: fig-normality-skewed
#| fig-cap: Normality Check on Suspected Skew Indices
#| fig-width: 8
#| fig-height: 18

indices |> 
  inner_join(
    indices_stats |> 
      select(game_name, index_name, skew, skew_status) |> 
      filter(skew_status != "acceptable"), 
    by = c("game_name", "index_name")
  ) |> 
  group_nest(game_name, index_name, skew, skew_status) |> 
  pmap(show_normality) |> 
  wrap_plots(ncol = 1)
```

From @fig-normality-skewed, it might be a good choice to transform indices with an absolute skewness value larger than 0.5, and logarithmic and square root transformations are used.

```{r}
#| label: transform-data

game_needs_trans <- indices_stats |>
  filter(abs(skew) > 0.5)
indices_trans <- indices |> 
  group_by(game_name, index_name) |> 
  mutate(
    test_trans = case_when(
      game_name == "小狗回家" & index_name == "mean_score" ~ -log10(1 - test), 
      game_name == "各得其所" & index_name == "mrt_init" ~ log10(test),
      game_name == "数字推理" ~ sqrt(test),
      game_name == "塔罗牌" ~ -sqrt(max(test) - test),
      game_name == "人工语言-中级" ~ -sqrt(max(test) - test),
      game_name == "语义判断" ~ -log10(max(test) + 1 - test),
      game_name == "数感" ~ log10(test),
      game_name == "时长分辨" ~ log10(test),
      game_name == "节奏感知" ~ sqrt(test),
      TRUE ~ test
    ),
    score_trans = if_else(reversed == "yes", -test_trans, test_trans)
  ) |> 
  ungroup()
indices_stats_trans <- summary_data(indices_trans, name_value = "test_trans")
```

```{r}
#| label: fig-normality-trans
#| fig-cap: Normality Check after Transformations
#| fig-width: 8
#| fig-height: 18

indices_trans |> 
  inner_join(indices_stats_trans, by = c("game_name", "index_name")) |> 
  semi_join(game_needs_trans, by = c("game_name", "index_name")) |> 
  group_nest(game_name, index_name, skew, skew_status) |> 
  pmap(show_normality, name_value = "test_trans") |> 
  wrap_plots(ncol = 1)
```

From @fig-normality-trans, we know these indices now perform very well on normality. The transformations seem to be useful.

```{r}
#| label: prepare-data

indices_trans_wider <- pivot_wider_indices(
  indices_trans, 
  name_value = "score_trans",
  always_suffix = TRUE
)
indices_trans_wider_bare <- select(indices_trans_wider, -user_id)
```

# Data Checking on Correlation Matrix

```{r}
#| label: fig-miss-pattern
#| column: page
#| fig-cap: Missing Pattern
#| fig-width: 15
#| fig-height: 9

naniar::vis_miss(indices_trans_wider_bare) +
  scale_y_continuous(expand = c(0, 0), trans = "reverse") +
  theme(axis.text.x = element_text(angle = 90))
```

```{r}
#| label: fig-overall-correlation
#| column: page
#| fig-cap: Overview of Correlation Matrix
#| fig-width: 15
#| fig-height: 15

indices_trans_wider_bare |>
  correlate(quiet = TRUE) |>
  autoplot(method = "HC", triangular = "full") +
  scico::scale_fill_scico(palette = "bam", midpoint = 0, direction = -1)
```

## Bartlett's Test

```{r}
#| label: bartlett-test

psych::cortest.bartlett(indices_trans_wider_bare) |> 
  as_tibble() |> 
  knitr::kable(digits = 2)
```

The small p value (\<\< 0.05) indicates the correlation matrix is suitable for factor analysis.

## Sampling Adequacy

KMO test: this test will give us an index of how well the matrix is suited for factor analysis. The criteria suggested by Kaiser [-@dziuban1974]:

![](images/paste-0D803EF7.png)

```{r}
#| label: KMO-result

kmo_result <- psych::KMO(indices_trans_wider_bare)
kmo_result$MSAi |> 
  enframe(name = "game_index_name", value = "MSA") |> 
  separate(game_index_name, c("game_name", "index_name"), sep = "\\.") |> 
  mutate(MSA = digits(MSA, 2)) |> 
  formattable() |> 
  as.datatable(caption = "KMO test result")
```

The overall MSA value is `r round(kmo_result$MSA, 2)`. However, there are `r sum(kmo_result$MSAi < 0.6)` indices with MSA value lower than 0.6, which is generally acceptable.

# Exploratory Factor Analysis

## Determining Number of Factors

```{r}
#| label: calc-factors
#| fig-show: hide

n_factor_result <- psych::nfactors(indices_trans_wider_bare)
```

```{r}
#| label: tbl-nfactors
#| tbl-cap: Number of Factors Tests

checks <- c("BIC", "SABIC", "eBIC", "MAP")
n_factor_result$vss.stats |>
  as_tibble() |>
  select(BIC, SABIC, eBIC) |>
  mutate(n_factor = seq_len(n()), .before = 1L) |>
  add_column(MAP = n_factor_result$map) |> 
  gt() |> 
  fmt_number(
    -c(n_factor, MAP),
    decimals = 0
  ) |>
  fmt_scientific(MAP) |>
  tab_style(
    style = cell_text(weight = "bold"),
    locations = map(
      checks,
      ~ cells_body(
        columns = all_of(.x),
        rows = !!sym(.x) == min(!!sym(.x))
      )
    )
  ) |> 
  as_raw_html()
```

From @tbl-nfactors, we noticed inconsistencies. So we try factor numbers as 7 or 3.

## Results of 7-factor

```{r}
#| label: efa-seven-factor-oblimin
#| column: page

fitted <- psych::fa(indices_trans_wider_bare, 7)
parameters::model_parameters(fitted, sort = TRUE, threshold = "max")
```

```{r}
#| label: efa-seven-factor-varimin
#| column: page

fitted <- fa(indices_trans_wider_bare, 7, rotate = "varimin")
parameters::model_parameters(fitted, sort = TRUE, threshold = 0.3)
```


